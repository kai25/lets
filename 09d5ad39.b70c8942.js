(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{140:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},m=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,b=m["".concat(o,".").concat(d)]||m[d]||u[d]||i;return n?a.a.createElement(b,l({ref:t},s,{components:n})):a.a.createElement(b,l({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},99:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),i=(n(0),n(140)),o={id:"examples",title:"Examples"},l={id:"examples",title:"Examples",description:"## What are these examples ?",source:"@site/docs/examples.md",permalink:"/docs/examples",editUrl:"https://github.com/lets-cli/lets/edit/master/docs/docs/examples.md",sidebar:"someSidebar",previous:{title:"Lets environment",permalink:"/docs/env"},next:{title:"Example for JavaScript/Node.js",permalink:"/docs/example_js"}},c=[{value:"What are these examples ?",id:"what-are-these-examples-",children:[]},{value:"Recomendations for writing <code>lets.yaml</code>",id:"recomendations-for-writing-letsyaml",children:[]}],s={rightToc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"what-are-these-examples-"},"What are these examples ?"),Object(i.b)("p",null,"While there is no such difference which project and which language is used with ",Object(i.b)("inlineCode",{parentName:"p"},"lets"),", in general we belive it would give a better understanding on how to do things with ",Object(i.b)("inlineCode",{parentName:"p"},"lets")," right if examples will be suited for different languages and tools. "),Object(i.b)("h2",{id:"recomendations-for-writing-letsyaml"},"Recomendations for writing ",Object(i.b)("inlineCode",{parentName:"h2"},"lets.yaml")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"if you have many projects (lets say - microservices) - it would be great to have one way to run and operate them when developing"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"run")," command - the main purpouse of this command is to run all in once. If all projects has this command its easier to remember."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"test")," command - each projects should have a tests and a way to run them, either one file or all tests at once"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"init")," command - some kind of project initialization - creates missing files, dirs for developer, checks permissions, login to docker registry, checks inotify limits for tools such as webpack and other file watchers."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"split ",Object(i.b)("inlineCode",{parentName:"p"},"lets.yaml")," when it becomes big.\nIf ",Object(i.b)("inlineCode",{parentName:"p"},"lets.yaml")," became bit, it would be great to split it in smaller, more specific files using `` for example"))))}p.isMDXComponent=!0}}]);